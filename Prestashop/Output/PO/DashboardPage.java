package TestCases.PO;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class DashboardPage {

    WebDriver driver;

    JavascriptExecutor js;

    Map<String, Object> vars;

    public DashboardPage(WebDriver driver, JavascriptExecutor js, Map<String, Object> vars) {
        this.driver = driver;
        this.js = js;
        this.vars = vars;
    }

    public void clickProducts() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        By elem = By.linkText("Products");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void hoverCatalog(boolean key1, boolean key2) {
        if (key1 != false)
            clickProducts();
        if (key2 != false)
            clickProducts_1();
    }

    public void clickProducts_1() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        By elem = By.linkText("Products");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
        {
            elem = By.cssSelector(".addons_connect");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
    }

    public void clickProductFeatures() {
        By elem = By.linkText("Product Features");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void hoverCatalog_1() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        clickProductFeatures();
    }

    public void clickStates() {
        By elem = By.linkText("States");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void hoverLocalization() {
        {
            By elem = By.linkText("Localization");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        clickStates();
    }

    public void clickProductAttributes() {
        By elem = By.linkText("Product Attributes");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void hoverCatalog_2() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        clickProductAttributes();
    }

    public void clickProducts_2() {
        By elem = By.linkText("Products");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void hoverCatalog_3() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        clickProducts_2();
    }

    public void hoverCatalog_4() {
        {
            By elem = By.linkText("Catalog");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement element = driver.findElement(elem);
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
    }
}
