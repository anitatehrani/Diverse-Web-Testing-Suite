package TestCases.PO;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class UsersPage {

    WebDriver driver;

    JavascriptExecutor js;

    Map<String, Object> vars;

    public UsersPage(WebDriver driver, JavascriptExecutor js, Map<String, Object> vars) {
        this.driver = driver;
        this.js = js;
        this.vars = vars;
    }

    public void click_LINKTEXT_Addanewuser() {
        By elem = By.linkText("Add a new user");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void set_ID_jsnew_username(String key1) {
        By elem = By.id("jsnew_username");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key1);
    }

    public void set_ID_jsnew_password(String key2) {
        By elem = By.id("jsnew_password");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key2);
    }

    public void set_ID_jsconfirm_password(String key3, String key4) {
        By elem = By.id("jsconfirm_password");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key3);
        {
            elem = By.id("jsrole");
            MyUtils.WaitForElementLoaded(driver, elem);
            WebElement dropdown = driver.findElement(elem);
            elem = By.xpath("//option[. = '" + key4 + "']");
            MyUtils.WaitForElementLoaded(driver, elem);
            dropdown.findElement(elem).click();
        }
    }

    public void click_CSSSELECTOR_optionnth_child2() {
        By elem = By.cssSelector("option:nth-child(2)");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void set_ID_jsemail(String key5) {
        By elem = By.id("jsemail");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).clear();
        driver.findElement(elem).sendKeys(key5);
    }

    public void clickAddANewUser(String key1, String key2, String key3, String key4, String key5) {
        click_LINKTEXT_Addanewuser();
        set_ID_jsnew_username(key1);
        set_ID_jsnew_password(key2);
        set_ID_jsconfirm_password(key3, key4);
        click_CSSSELECTOR_optionnth_child2();
        set_ID_jsemail(key5);
    }

    public void logout() {
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        By elem = By.linkText("Log out");
        driver.findElement(elem).click();
    }

    public void getData() {
            logout();
    }

    public void clickUsertest() {
        By elem = By.linkText("usertest");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void clickAdmin() {
        By elem = By.linkText("admin");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void click_CSSSELECTOR_trnth_child1tdnth_child1() {
        By elem = By.cssSelector("tr:nth-child(1) > td:nth-child(1)");
        MyUtils.WaitForElementLoaded(driver, elem);
        driver.findElement(elem).click();
    }

    public void clickAdmin_1() {
        click_CSSSELECTOR_trnth_child1tdnth_child1();
        clickAdmin();
    }
}
